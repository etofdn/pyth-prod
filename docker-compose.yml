version: '3.8'

services:
  # Primary Oracle Keeper
  oracle-keeper-primary:
    build: .
    container_name: oracle-keeper-primary
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - RPC_URL=${RPC_URL}
      - PRIVATE_KEY=${PRIVATE_KEY}
      - KEEPER_ROLE=primary
      - INSTANCE_ID=primary-001
    networks:
      - oracle-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    healthcheck:
      test: ["CMD", "node", "/app/healthcheck.js"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M

  # Backup Oracle Keeper (Failover)
  oracle-keeper-backup:
    build: .
    container_name: oracle-keeper-backup
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - RPC_URL=${RPC_URL}
      - PRIVATE_KEY=${BACKUP_PRIVATE_KEY}
      - KEEPER_ROLE=backup
      - INSTANCE_ID=backup-001
      - UPDATE_DELAY=10000  # 10s delay to avoid conflicts
    networks:
      - oracle-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    healthcheck:
      test: ["CMD", "node", "/app/healthcheck.js"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M

  # Prometheus Monitoring
  prometheus:
    image: prom/prometheus:latest
    container_name: oracle-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - oracle-network

  # Grafana Dashboard
  grafana:
    image: grafana/grafana:latest
    container_name: oracle-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    networks:
      - oracle-network

  # Node Exporter for system metrics
  node-exporter:
    image: prom/node-exporter:latest
    container_name: oracle-node-exporter
    restart: unless-stopped
    ports:
      - "9100:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    networks:
      - oracle-network

  # Redis for keeper coordination (prevents duplicate updates)
  redis:
    image: redis:7-alpine
    container_name: oracle-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    networks:
      - oracle-network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Log aggregation with Fluent Bit
  fluent-bit:
    image: fluent/fluent-bit:latest
    container_name: oracle-fluent-bit
    restart: unless-stopped
    volumes:
      - ./monitoring/fluent-bit.conf:/fluent-bit/etc/fluent-bit.conf
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
    networks:
      - oracle-network

volumes:
  prometheus_data:
  grafana_data:
  redis_data:

networks:
  oracle-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16