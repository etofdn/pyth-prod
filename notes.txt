https://testnet.snowtrace.io/address/0x23f0e8FAeE7bbb405E7A7C3d60138FCfd43d7509


[
  {
    "id": "399f1e8f1c4a517859963b56f104727a7a3c7f0f8fee56d34fa1f72e5a4b78ef",
    "attributes": {
      "asset_type": "Equity",
      "base": "META",
      "country": "US",
      "description": "META PLATFORMS INC / US DOLLAR - POST MARKET HOURS",
      "display_symbol": "META/USD POST MARKET",
      "publish_interval": "5",
      "quote_currency": "USD",
      "schedule": "America/New_York;1600-2000,1600-2000,1600-2000,1600-2000,1600-2000,C,C;0901/C",
      "symbol": "Equity.US.META/USD.POST"
    }
  },
  {
    "id": "783a457c2fe5642c96a66ba9a2fe61f511e9a0b539e0ed2a443321978e4d65a1",
    "attributes": {
      "asset_type": "Equity",
      "base": "META",
      "country": "US",
      "description": "META PLATFORMS INC / US DOLLAR - OVERNIGHT HOURS",
      "display_symbol": "META/USD OVERNIGHT",
      "publish_interval": "5",
      "quote_currency": "USD",
      "schedule": "America/New_York;0000-0400&2000-2400,0000-0400&2000-2400,0000-0400&2000-2400,0000-0400&2000-2400,0000-0400,C,2000-2400;0901/C",
      "symbol": "Equity.US.META/USD.ON"
    }
  },
  {
    "id": "ce0999c4f22f35f00e8f9913694868d00279c0b9efbd7cb1c358bf2fd76295c9",
    "attributes": {
      "asset_type": "Equity",
      "base": "META",
      "country": "US",
      "description": "META PLATFORMS INC / US DOLLAR - PRE MARKET HOURS",
      "display_symbol": "META/USD PRE MARKET",
      "publish_interval": "5",
      "quote_currency": "USD",
      "schedule": "America/New_York;0400-0930,0400-0930,0400-0930,0400-0930,0400-0930,C,C;0901/C",
      "symbol": "Equity.US.META/USD.PRE"
    }
  },
  {
    "id": "78a3e3b8e676a8f73c439f5d749737034b139bbbe899ba5775216fba596607fe",
    "attributes": {
      "asset_type": "Equity",
      "base": "META",
      "cms_symbol": "META",
      "country": "US",
      "cqs_symbol": "META",
      "description": "META PLATFORMS INC / US DOLLAR",
      "display_symbol": "META/USD",
      "nasdaq_symbol": "META",
      "publish_interval": "5",
      "quote_currency": "USD",
      "schedule": "America/New_York;0930-1600,0930-1600,0930-1600,0930-1600,0930-1600,C,C;0526/C,0619/C,0703/0930-1300,0704/C,0901/C",
      "symbol": "Equity.US.META/USD"
    }
  },
  {
    "id": "5c39e9f112397fb3d0c90af89f8a255af99dfab4708d83a7da70a3c1db313bc0",
    "attributes": {
      "asset_type": "Equity",
      "base": "META",
      "country": "US",
      "description": "META PLATFORMS INC / US DOLLAR - EXTENDED HOURS",
      "display_symbol": "META/USD EXTENDED",
      "publish_interval": "5",
      "quote_currency": "USD",
      "schedule": "America/New_York;O,O,O,O,0000-2000,C,2000-2400;0703/0000-1300,0704/C",
      "symbol": "Equity.US.META/USD.EXT"
    }
  }
]

[
  {
    "id": "5a207c4aa0114baecf852fcd9db9beb8ec715f2db48caa525dbd878fd416fb09",
    "attributes": {
      "asset_type": "Equity",
      "base": "AAPL",
      "country": "US",
      "description": "APPLE INC / US DOLLAR - POST MARKET HOURS",
      "display_symbol": "AAPL/USD POST MARKET",
      "publish_interval": "5",
      "quote_currency": "USD",
      "schedule": "America/New_York;1600-2000,1600-2000,1600-2000,1600-2000,1600-2000,C,C;0901/C",
      "symbol": "Equity.US.AAPL/USD.POST"
    }
  },
  {
    "id": "8c320e4cd87c6cef41513aead15db413cf9253211923fef6e87187a7f6688906",
    "attributes": {
      "asset_type": "Equity",
      "base": "AAPL",
      "country": "US",
      "description": "APPLE INC / US DOLLAR - PRE MARKET HOURS",
      "display_symbol": "AAPL/USD PRE MARKET",
      "publish_interval": "5",
      "quote_currency": "USD",
      "schedule": "America/New_York;0400-0930,0400-0930,0400-0930,0400-0930,0400-0930,C,C;0901/C",
      "symbol": "Equity.US.AAPL/USD.PRE"
    }
  },
  {
    "id": "208ae3135dc9815834e2bbbcfe8825fa1f25209238958d6b31ff32ac0c75a83a",
    "attributes": {
      "asset_type": "Equity",
      "base": "AAPL",
      "country": "US",
      "description": "APPLE INC / US DOLLAR - EXTENDED HOURS",
      "display_symbol": "AAPL/USD EXTENDED",
      "publish_interval": "5",
      "quote_currency": "USD",
      "schedule": "America/New_York;O,O,O,O,0000-2000,C,2000-2400;0703/0000-1300,0704/C",
      "symbol": "Equity.US.AAPL/USD.EXT"
    }
  },
  {
    "id": "241b9a5ce1c3e4bfc68e377158328628f1b478afaa796c4b1760bd3713c2d2d2",
    "attributes": {
      "asset_type": "Equity",
      "base": "AAPL",
      "country": "US",
      "description": "APPLE INC / US DOLLAR - OVERNIGHT HOURS",
      "display_symbol": "AAPL/USD OVERNIGHT",
      "publish_interval": "5",
      "quote_currency": "USD",
      "schedule": "America/New_York;0000-0400&2000-2400,0000-0400&2000-2400,0000-0400&2000-2400,0000-0400&2000-2400,0000-0400,C,2000-2400;0901/C",
      "symbol": "Equity.US.AAPL/USD.ON"
    }
  },
  {
    "id": "49f6b65cb1de6b10eaf75e7c03ca029c306d0357e91b5311b175084a5ad55688",
    "attributes": {
      "asset_type": "Equity",
      "base": "AAPL",
      "cms_symbol": "AAPL",
      "country": "US",
      "cqs_symbol": "AAPL",
      "description": "APPLE INC / US DOLLAR",
      "display_symbol": "AAPL/USD",
      "nasdaq_symbol": "AAPL",
      "publish_interval": "5",
      "quote_currency": "USD",
      "schedule": "America/New_York;0930-1600,0930-1600,0930-1600,0930-1600,0930-1600,C,C;0526/C,0619/C,0703/0930-1300,0704/C,0901/C",
      "symbol": "Equity.US.AAPL/USD"
    }
  }
]


[
  {
    "id": "91a4039b35c137f1af5e048910c7c535d6faa9bc3084d9f62d395b9f75a22001",
    "attributes": {
      "asset_type": "Equity",
      "base": "AMZN",
      "country": "US",
      "description": "AMAZON.COM, INC. / US DOLLAR - EXTENDED HOURS",
      "display_symbol": "AMZN/USD EXTENDED",
      "publish_interval": "5",
      "quote_currency": "USD",
      "schedule": "America/New_York;O,O,O,O,0000-2000,C,2000-2400;0703/0000-1300,0704/C",
      "symbol": "Equity.US.AMZN/USD.EXT"
    }
  },
  {
    "id": "82c59e36a8e0247e15283748d6cd51f5fa1019d73fbf3ab6d927e17d9e357a7f",
    "attributes": {
      "asset_type": "Equity",
      "base": "AMZN",
      "country": "US",
      "description": "AMAZON.COM, INC. / US DOLLAR - PRE MARKET HOURS",
      "display_symbol": "AMZN/USD PRE MARKET",
      "publish_interval": "5",
      "quote_currency": "USD",
      "schedule": "America/New_York;0400-0930,0400-0930,0400-0930,0400-0930,0400-0930,C,C;0901/C",
      "symbol": "Equity.US.AMZN/USD.PRE"
    }
  },
  {
    "id": "b5d0e0fa58a1f8b81498ae670ce93c872d14434b72c364885d4fa1b257cbb07a",
    "attributes": {
      "asset_type": "Equity",
      "base": "AMZN",
      "cms_symbol": "AMZN",
      "country": "US",
      "cqs_symbol": "AMZN",
      "description": "AMAZON.COM, INC. / US DOLLAR",
      "display_symbol": "AMZN/USD",
      "nasdaq_symbol": "AMZN",
      "publish_interval": "5",
      "quote_currency": "USD",
      "schedule": "America/New_York;0930-1600,0930-1600,0930-1600,0930-1600,0930-1600,C,C;0526/C,0619/C,0703/0930-1300,0704/C,0901/C",
      "symbol": "Equity.US.AMZN/USD"
    }
  },
  {
    "id": "4ec1330b56eca05037c6b5a51d05f73db79bf3b4d29899881acd27966af184b4",
    "attributes": {
      "asset_type": "Equity",
      "base": "AMZN",
      "country": "US",
      "description": "AMAZON.COM, INC. / US DOLLAR - OVERNIGHT HOURS",
      "display_symbol": "AMZN/USD OVERNIGHT",
      "publish_interval": "5",
      "quote_currency": "USD",
      "schedule": "America/New_York;0000-0400&2000-2400,0000-0400&2000-2400,0000-0400&2000-2400,0000-0400&2000-2400,0000-0400,C,2000-2400;0901/C",
      "symbol": "Equity.US.AMZN/USD.ON"
    }
  },
  {
    "id": "62731dfcc8b8542e52753f208248c3e73fab2ec15422d6f65c2decda71ccea0d",
    "attributes": {
      "asset_type": "Equity",
      "base": "AMZN",
      "country": "US",
      "description": "AMAZON.COM, INC. / US DOLLAR - POST MARKET HOURS",
      "display_symbol": "AMZN/USD POST MARKET",
      "publish_interval": "5",
      "quote_currency": "USD",
      "schedule": "America/New_York;1600-2000,1600-2000,1600-2000,1600-2000,1600-2000,C,C;0901/C",
      "symbol": "Equity.US.AMZN/USD.POST"
    }
  }
]


[
  {
    "id": "61c4ca5b9731a79e285a01e24432d57d89f0ecdd4cd7828196ca8992d5eafef6",
    "attributes": {
      "asset_type": "Equity",
      "base": "NVDA",
      "country": "US",
      "description": "NVIDIA CORP / US DOLLAR - PRE MARKET HOURS",
      "display_symbol": "NVDA/USD PRE MARKET",
      "publish_interval": "5",
      "quote_currency": "USD",
      "schedule": "America/New_York;0400-0930,0400-0930,0400-0930,0400-0930,0400-0930,C,C;0901/C",
      "symbol": "Equity.US.NVDA/USD.PRE"
    }
  },
  {
    "id": "e3d244e4ccf1a047bae83d54bf2327a7ce939a5acfe85727dc223c5cedffb5cc",
    "attributes": {
      "asset_type": "Equity",
      "base": "NVDA",
      "country": "US",
      "description": "NVIDIA CORP / US DOLLAR - EXTENDED HOURS",
      "display_symbol": "NVDA/USD EXTENDED",
      "publish_interval": "5",
      "quote_currency": "USD",
      "schedule": "America/New_York;O,O,O,O,0000-2000,C,2000-2400;0703/0000-1300,0704/C",
      "symbol": "Equity.US.NVDA/USD.EXT"
    }
  },
  {
    "id": "b1073854ed24cbc755dc527418f52b7d271f6cc967bbf8d8129112b18860a593",
    "attributes": {
      "asset_type": "Equity",
      "base": "NVDA",
      "cms_symbol": "NVDA",
      "country": "US",
      "cqs_symbol": "NVDA",
      "description": "NVIDIA CORP / US DOLLAR",
      "display_symbol": "NVDA/USD",
      "nasdaq_symbol": "NVDA",
      "publish_interval": "5",
      "quote_currency": "USD",
      "schedule": "America/New_York;0930-1600,0930-1600,0930-1600,0930-1600,0930-1600,C,C;0526/C,0619/C,0703/0930-1300,0704/C,0901/C",
      "symbol": "Equity.US.NVDA/USD"
    }
  },
  {
    "id": "25719379353a508b1531945f3c466759d6efd866f52fbaeb3631decb70ba381f",
    "attributes": {
      "asset_type": "Equity",
      "base": "NVDA",
      "country": "US",
      "description": "NVIDIA CORP / US DOLLAR - POST MARKET HOURS",
      "display_symbol": "NVDA/USD POST MARKET",
      "publish_interval": "5",
      "quote_currency": "USD",
      "schedule": "America/New_York;1600-2000,1600-2000,1600-2000,1600-2000,1600-2000,C,C;0901/C",
      "symbol": "Equity.US.NVDA/USD.POST"
    }
  },
  {
    "id": "c949a96fd1626e82abc5e1496e6e8d44683ac8ac288015ee90bf37257e3e6bf6",
    "attributes": {
      "asset_type": "Equity",
      "base": "NVDA",
      "country": "US",
      "description": "NVIDIA CORP / US DOLLAR - OVERNIGHT HOURS",
      "display_symbol": "NVDA/USD OVERNIGHT",
      "publish_interval": "5",
      "quote_currency": "USD",
      "schedule": "America/New_York;0000-0400&2000-2400,0000-0400&2000-2400,0000-0400&2000-2400,0000-0400&2000-2400,0000-0400,C,2000-2400;0901/C",
      "symbol": "Equity.US.NVDA/USD.ON"
    }
  }
]


[
  {
    "id": "88d0800b1649d98e21b8bf9c3f42ab548034d62874ad5d80e1c1b730566d7f61",
    "attributes": {
      "asset_type": "Equity",
      "base": "GOOGL",
      "country": "US",
      "description": "ALPHABET INC CLASS A / US DOLLAR - POST MARKET HOURS",
      "display_symbol": "GOOGL/USD POST MARKET",
      "publish_interval": "5",
      "quote_currency": "USD",
      "schedule": "America/New_York;1600-2000,1600-2000,1600-2000,1600-2000,1600-2000,C,C;0901/C",
      "symbol": "Equity.US.GOOGL/USD.POST"
    }
  },
  {
    "id": "e65ff435be42630439c96396653a342829e877e2aafaeaf1a10d0ee5fd2cf3f2",
    "attributes": {
      "asset_type": "Equity",
      "base": "GOOG",
      "cms_symbol": "GOOG",
      "country": "US",
      "cqs_symbol": "GOOG",
      "description": "ALPHABET INC CLASS C / US DOLLAR",
      "display_symbol": "GOOG/USD",
      "nasdaq_symbol": "GOOG",
      "publish_interval": "5",
      "quote_currency": "USD",
      "schedule": "America/New_York;0930-1600,0930-1600,0930-1600,0930-1600,0930-1600,C,C;0526/C,0619/C,0703/0930-1300,0704/C,0901/C",
      "symbol": "Equity.US.GOOG/USD"
    }
  },
  {
    "id": "f3926e605ff67ccbc8089cdc5569dacbc417e2df85c35c1a06c9af053ec51231",
    "attributes": {
      "asset_type": "Equity",
      "base": "GOOGL",
      "country": "US",
      "description": "ALPHABET INC CLASS A / US DOLLAR - EXTENDED HOURS",
      "display_symbol": "GOOGL/USD EXTENDED",
      "publish_interval": "5",
      "quote_currency": "USD",
      "schedule": "America/New_York;O,O,O,O,0000-2000,C,2000-2400;0703/0000-1300,0704/C",
      "symbol": "Equity.US.GOOGL/USD.EXT"
    }
  },
  {
    "id": "43c3a42db1a663a22551d6c35d5bab823e86c1a05f27de3dd900e68952fce175",
    "attributes": {
      "asset_type": "Equity",
      "base": "GOOGL",
      "country": "US",
      "description": "ALPHABET INC CLASS A / US DOLLAR - PRE MARKET HOURS",
      "display_symbol": "GOOGL/USD PRE MARKET",
      "publish_interval": "5",
      "quote_currency": "USD",
      "schedule": "America/New_York;0400-0930,0400-0930,0400-0930,0400-0930,0400-0930,C,C;0901/C",
      "symbol": "Equity.US.GOOGL/USD.PRE"
    }
  },
  {
    "id": "07d24bb76843496a45bce0add8b51555f2ea02098cb04f4c6d61f7b5720836b4",
    "attributes": {
      "asset_type": "Equity",
      "base": "GOOGL",
      "country": "US",
      "description": "ALPHABET INC CLASS A / US DOLLAR - OVERNIGHT HOURS",
      "display_symbol": "GOOGL/USD OVERNIGHT",
      "publish_interval": "5",
      "quote_currency": "USD",
      "schedule": "America/New_York;0000-0400&2000-2400,0000-0400&2000-2400,0000-0400&2000-2400,0000-0400&2000-2400,0000-0400,C,2000-2400;0901/C",
      "symbol": "Equity.US.GOOGL/USD.ON"
    }
  },
  {
    "id": "5a48c03e9b9cb337801073ed9d166817473697efff0d138874e0f6a33d6d5aa6",
    "attributes": {
      "asset_type": "Equity",
      "base": "GOOGL",
      "cms_symbol": "GOOGL",
      "country": "US",
      "cqs_symbol": "GOOGL",
      "description": "ALPHABET INC CLASS A / US DOLLAR",
      "display_symbol": "GOOGL/USD",
      "nasdaq_symbol": "GOOGL",
      "publish_interval": "5",
      "quote_currency": "USD",
      "schedule": "America/New_York;0930-1600,0930-1600,0930-1600,0930-1600,0930-1600,C,C;0526/C,0619/C,0703/0930-1300,0704/C,0901/C",
      "symbol": "Equity.US.GOOGL/USD"
    }
  }
]


The code snippet above does the following things:

Instantiate the IPyth interface from the Solidity SDK using the price feeds contract address.
Select the Price Feed IDs for the assets you want to fetch prices for. Price feeds come in two varieties, Stable and Beta. You should select Stable feed ids
Call IPyth.getUpdateFee to calculate the fee charged by Pyth to update the price.
Call IPyth.updatePriceFeeds to update the price, paying the fee calculated in the previous step.
Call IPyth.getPriceNoOlderThan to read the current price, providing the price feed ID that you wish to read and your acceptable staleness threshold for the price.


https://github.com/pyth-network/pyth-crosschain/blob/78c9f664c39fd46fad2f9224bf62ce6eccd3c6bb/target_chains/ethereum/sdk/solidity/IPyth.sol

To get Pyth data feeds on your testnet Avalanche (Avax) L1, here’s what you need to know based on the available context:

### 1. **Check Pyth Support for Avax Testnet**
Pyth is available on several EVM networks, including testnets, but you need to confirm if your specific Avalanche testnet is supported. You can find the list of supported networks and contract addresses here:  
[https://docs.pyth.network/price-feeds/contract-addresses/evm](https://docs.pyth.network/price-feeds/contract-addresses/evm)

### 2. **Get Price Feed IDs**
You’ll need the price feed IDs for the assets you want. These are available here:  
[https://www.pyth.network/developers/price-feed-ids](https://www.pyth.network/developers/price-feed-ids)

### 3. **Fetch Price Updates Off-Chain**
It is recommended to fetch the price update off-chain and pass it as an argument to your contract. This is a best practice for consuming Pyth price feeds on EVM chains.

### 4. **Update Your Smart Contract**
You will need to use the Pyth contract interface (such as `IPyth.sol`) in your smart contract to consume the price feeds.  
Example import (from context):
```solidity
pragma solidity ^0.8.0;

import "./PythStructs.sol";
import "./IPythEvents.sol";

/// @title Consume prices from the Pyth Network (https://pyth.network/).
/// @dev Please refer to the guidance at https://docs.pyth.network/documentation/pythnet-price-feeds/best-practices for how to consume prices safely.
/// @author Pyth Data Association
```
Source: [IPyth.sol](https://github.com/pyth-network/pyth-crosschain/blob/78c9f664c39fd46fad2f9224bf62ce6eccd3c6bb/target_chains/ethereum/sdk/solidity/IPyth.sol)

### 5. **Proactive Price Updates**
If you need proactive price updates, you can run the [Pyth Scheduler](https://docs.pyth.network/price-feeds/schedule-price-updates/using-scheduler) yourself.

---

#### **Summary of Steps**
1. **Check if Avax testnet is supported** ([contract addresses](https://docs.pyth.network/price-feeds/contract-addresses/evm))
2. **Get the price feed IDs** ([price feed IDs](https://www.pyth.network/developers/price-feed-ids))
3. **Fetch price update data off-chain** and pass it to your contract.
4. **Integrate the Pyth contract interface** in your smart contract.
5. **Optionally, run the Scheduler** for proactive updates.

---

Would you like a code example for fetching and submitting price updates, or do you need help with a specific step?